/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import javax.swing.JPanel;
import code.Staff;
import code.Finance;
import code.StudentFeesChallan;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
/**
 *
 * @author Mithrandir
 */
public class PayRoll extends javax.swing.JPanel {

    /**
     * Creates new form PayRoll
     */JPanel childPanel;
     Staff staff=new Staff();
     Finance finance=new Finance();
     int m=0;
    public PayRoll() {
        initComponents();
         int a=staff.previousyear();
        Object z=a;
        yearsearch.setSelectedItem(z.toString());
        String monthse=(String)this.monthsea.getSelectedItem();
        String year=(String)this.yearsearch.getSelectedItem();
        int y=Integer.parseInt(year);
         m=staff.getMonthInt(m,monthse);
       staff.totalamount(m, y, BASICSALARYjLABEL,INjLABEL1,INEDjLABEL1,GROSSjLABEL2,ADjLABEL3,RDjLABEL2,INCjLABEL3,NTjLABEL4,RTjLABEL5);
        staff.payROLLRecord(jTable1);
        addbtn2MouseClicked(null);
//        staff.getbasictotal("6","2018",lol);
//        staff.getincreamenttotal("6","2018",increamentTXT)
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel26 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel28 = new javax.swing.JLabel();
        idserch = new javax.swing.JTextField();
        namesearch = new javax.swing.JTextField();
        yearsearch = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        monthsea = new javax.swing.JComboBox<>();
        addbtn4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BASICSALARYjLABEL = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        INjLABEL1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        GROSSjLABEL2 = new javax.swing.JLabel();
        INEDjLABEL1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ADjLABEL3 = new javax.swing.JLabel();
        RDjLABEL2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        INCjLABEL3 = new javax.swing.JLabel();
        NTjLABEL4 = new javax.swing.JLabel();
        RTjLABEL5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1082, 779));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("NAME");

        jLabel28.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 51, 51));
        jLabel28.setText("ID");

        idserch.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        idserch.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        idserch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idserchActionPerformed(evt);
            }
        });

        namesearch.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        namesearch.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        namesearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namesearchActionPerformed(evt);
            }
        });

        yearsearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1982", "1981", "1980" }));
        yearsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearsearchActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setText("YEAR");

        monthsea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "JANUARY", "FEBUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" }));
        monthsea.setSelectedIndex((staff.previousMonth()));
        monthsea.setSelectedItem((staff.getYear()));
        monthsea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthseaActionPerformed(evt);
            }
        });

        addbtn4.setBackground(new java.awt.Color(51, 153, 255));
        addbtn4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addbtn2MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8-search-40.png"))); // NOI18N
        jLabel8.setText("SEARCH");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout addbtn4Layout = new javax.swing.GroupLayout(addbtn4);
        addbtn4.setLayout(addbtn4Layout);
        addbtn4Layout.setHorizontalGroup(
            addbtn4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addbtn4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel8)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        addbtn4Layout.setVerticalGroup(
            addbtn4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addbtn4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel27.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 51, 51));
        jLabel27.setText("MONTH");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/icons8-back-48.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel3.setText("PAYSLIP");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel28)
                            .addComponent(idserch)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel26)
                            .addComponent(namesearch)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(monthsea, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel27)
                                .addGap(74, 74, 74)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel29))
                            .addComponent(yearsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(addbtn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idserch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel27)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(yearsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(monthsea, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(namesearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addbtn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTable1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setSelectionBackground(new java.awt.Color(51, 153, 255));
        jScrollPane1.setViewportView(jTable1);

        BASICSALARYjLABEL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BASICSALARYjLABEL.setForeground(new java.awt.Color(51, 51, 51));
        BASICSALARYjLABEL.setText("TOTAL BASIC SALARY:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("TOTAL BASIC SALARY:");

        INjLABEL1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        INjLABEL1.setForeground(new java.awt.Color(51, 51, 51));
        INjLABEL1.setText("TOTAL BASIC SALARY:");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("TOTAL INCREAMENT  :");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("TOTAL INCREAMENTED SALARY:");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("TOTAL GROSS SALARY  :");

        GROSSjLABEL2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        GROSSjLABEL2.setForeground(new java.awt.Color(51, 51, 51));
        GROSSjLABEL2.setText("TOTAL BASIC SALARY:");

        INEDjLABEL1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        INEDjLABEL1.setForeground(new java.awt.Color(51, 51, 51));
        INEDjLABEL1.setText("TOTAL BASIC SALARY:");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("TOTAL RETENTION DEDUCTION:");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("TOTAL ADVANCE SALARY  :");

        ADjLABEL3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ADjLABEL3.setForeground(new java.awt.Color(51, 51, 51));
        ADjLABEL3.setText("TOTAL BASIC SALARY:");

        RDjLABEL2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        RDjLABEL2.setForeground(new java.awt.Color(51, 51, 51));
        RDjLABEL2.setText("TOTAL BASIC SALARY:");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("TOTAL NETSALARY  :");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("TOTAL RETENTION  :");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("TOTAL INCENTIVES:");

        INCjLABEL3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        INCjLABEL3.setForeground(new java.awt.Color(51, 51, 51));
        INCjLABEL3.setText("TOTAL BASIC SALARY:");

        NTjLABEL4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NTjLABEL4.setForeground(new java.awt.Color(51, 51, 51));
        NTjLABEL4.setText("TOTAL BASIC SALARY:");

        RTjLABEL5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        RTjLABEL5.setForeground(new java.awt.Color(51, 51, 51));
        RTjLABEL5.setText("TOTAL BASIC SALARY:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(INjLABEL1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(BASICSALARYjLABEL, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ADjLABEL3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GROSSjLABEL2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(INEDjLABEL1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel16)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RTjLABEL5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NTjLABEL4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(INCjLABEL3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RDjLABEL2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(BASICSALARYjLABEL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(INjLABEL1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(INEDjLABEL1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(GROSSjLABEL2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ADjLABEL3)
                            .addComponent(jLabel13)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(RDjLABEL2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(INCjLABEL3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(NTjLABEL4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RTjLABEL5)
                            .addComponent(jLabel15))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jPanel1MouseClicked

    private void namesearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namesearchActionPerformed
        // TODO add your handling code here:
        //        Student std=new Student();
        ////        boolean isIntegerid=std.isInteger(namesearch.getText());
        //          String monthse=(String)this.monthsea.getSelectedItem();
        //          String year=(String)this.yearsearch.getSelectedItem();
        //        if (namesearch.getText().equals("")){
            //           JOptionPane.showMessageDialog( this, "PLEASE ENTER NAME FOR SEARCH","Error", JOptionPane.ERROR_MESSAGE);
            //          return;
            //       }
        //
        //       Staff st=new Staff();
        //       st.staffReportCondition(jTable1, idserch.getText(), namesearch.getText(), monthse, year);
        //       st.sta
    }//GEN-LAST:event_namesearchActionPerformed

    private void idserchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idserchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idserchActionPerformed

    private void addbtn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtn2MouseClicked
        
        
        
        //         StudentFeesChallan std=new StudentFeesChallan();
        //        boolean isIntegerid=std.isInteger(idserch.getText());
        String monthse=(String)this.monthsea.getSelectedItem();
        String year=(String)this.yearsearch.getSelectedItem();
        int y=Integer.parseInt(year);
        m=staff.getMonthInt(m,monthse);
        staff.totalamount(m, y, BASICSALARYjLABEL,INjLABEL1,INEDjLABEL1,GROSSjLABEL2,ADjLABEL3,RDjLABEL2,INCjLABEL3,NTjLABEL4,RTjLABEL5);

        if (idserch.getText().equals("")&&namesearch.getText().equals("")&&monthse.equals(" ")&&year.equals(" ")){
            JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Staff st=new Staff();
        int m=0;
        //        Staff staff=new Staff();
        m=staff.getMonthInt(m,monthse);
        ////        if (id)
        if (idserch.getText()!=""&&namesearch.getText().equals("")&&monthse.equals(" ")&&year.equals(" ")){
            //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            //          return;
            if (st.searchstudentfeesid(idserch.getText())){
                st.StudentFeesConditionid(jTable1, idserch.getText());
                return;}
            else{
                JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
        if (idserch.getText().equals("")&&namesearch.getText()!=""&&monthse.equals(" ")&&year.equals(" ")){
            if (st.searchstudentfeesname(namesearch.getText())){         st.StudentFeesConditionname(jTable1, namesearch.getText());//jTable1);
            return;}
        else {

            JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        }
        if (idserch.getText().equals("")&&namesearch.getText().equals("")&&monthse!=" "&&year.equals(" ")){
            //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            if (st.searchstudentfeesmonth(String.valueOf(m))){ st.StudentFeesConditionmonth(jTable1, String.valueOf(m));
                return;}else {

                JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
        if (idserch.getText().equals("")&&namesearch.getText().equals("")&&monthse==" "&&year!=" "){
            //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            if (st.searchstudentfeesyear(year)){   st.StudentFeesConditionyear(jTable1, year);
                return;}else {

                JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
        if (idserch.getText()!=""&&namesearch.getText()!=""&&monthse==" "&&year.equals(" ")){
            //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            if (st.searchstudentfeesidname(idserch.getText(), namesearch.getText())){    st.StudentFeesConditionidName(jTable1, idserch.getText(),namesearch.getText());
                return;
            }
            else {

                JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                return;
            }}

            if (idserch.getText()!=""&&namesearch.getText()==""&&monthse!=" "&&year.equals(" ")){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesidmonth(idserch.getText(), String.valueOf(m))){  st.StudentFeesConditionidMonth(jTable1, idserch.getText(),String.valueOf(m));
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText()!=""&&namesearch.getText()==""&&monthse==" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesidyear(idserch.getText(), year)){ st.StudentFeesConditionidYear(jTable1, idserch.getText(),year);
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText().equals("")&&namesearch.getText()!=""&&monthse!=" "&&year.equals(" ")){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesnamemonth(namesearch.getText(), String.valueOf(m))){  st.StudentFeesConditionNameMonth(jTable1, namesearch.getText(),String.valueOf(m));
                    return;}
                else{

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText().equals("")&&namesearch.getText()!=""&&monthse==" "&&year !=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesnameyear(namesearch.getText(), year)){
                    st.StudentFeesConditionNameYear(jTable1, namesearch.getText(),year);
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText().equals("")&&namesearch.getText().equals("")&&monthse!=" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if(st.searchstudentfeesmonthyear(String.valueOf(m), year)){
                    st.StudentFeesConditionMonthYear(jTable1, String.valueOf(m), year);
                    //JOptionPane.showMessageDialog(null, "found");//Year(jTable1, namesearch.getText(),year);
                    return;}else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText()!=""&&namesearch.getText()!=""&&monthse!=" "&&year.equals("")){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesidnameyear(idserch.getText(), namesearch.getText(), year)){
                    st.StudentFeesConditionidNameMonth(jTable1, idserch.getText(),namesearch.getText(),String.valueOf(m));
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText()!=""&&namesearch.getText()!=""&&monthse==" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesidmonthyear(idserch.getText(), String.valueOf(m), year)){
                    st.StudentFeesConditionIdMonthYear(jTable1, idserch.getText(),String.valueOf(m),year);
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText().equals("")&&namesearch.getText()!=""&&monthse!=" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesnamemonthyear(namesearch.getText(), String.valueOf(m), year)){    st.StudentFeesConditionNameMonthYear(jTable1, namesearch.getText(),String.valueOf(m),year);
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText()!=""&&namesearch.getText()!=""&&monthse!=" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchpayrollAll(idserch.getText(), namesearch.getText(), String.valueOf(m), year)){
                    st.payrollAll(jTable1, idserch.getText(), namesearch.getText(), String.valueOf(m), year);

                    return;}else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
        
    }//GEN-LAST:event_addbtn2MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        String monthse=(String)this.monthsea.getSelectedItem();
        String year=(String)this.yearsearch.getSelectedItem();

        if (idserch.getText().equals("")&&namesearch.getText().equals("")&&monthse.equals(" ")&&year.equals(" ")){
            JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Staff st=new Staff();
        int m=0;
        //        Staff staff=new Staff();
        m=staff.getMonthInt(m,monthse);
          int y=Integer.parseInt(year);
        ////        if (id)
         staff.totalamount(m, y, BASICSALARYjLABEL,INjLABEL1,INEDjLABEL1,GROSSjLABEL2,ADjLABEL3,RDjLABEL2,INCjLABEL3,NTjLABEL4,RTjLABEL5);
        if (idserch.getText()!=""&&namesearch.getText().equals("")&&monthse.equals(" ")&&year.equals(" ")){
            //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            //          return;
            if (st.searchstudentfeesid(idserch.getText())){
                st.StudentFeesConditionid(jTable1, idserch.getText());
                return;}
            else{
                JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
        if (idserch.getText().equals("")&&namesearch.getText()!=""&&monthse.equals(" ")&&year.equals(" ")){
            if (st.searchstudentfeesname(namesearch.getText())){         st.StudentFeesConditionname(jTable1, namesearch.getText());//jTable1);
            return;}
        else {

            JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        }
        if (idserch.getText().equals("")&&namesearch.getText().equals("")&&monthse!=" "&&year.equals(" ")){
            //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            if (st.searchstudentfeesmonth(String.valueOf(m))){ st.StudentFeesConditionmonth(jTable1, String.valueOf(m));
                return;}else {

                JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
        if (idserch.getText().equals("")&&namesearch.getText().equals("")&&monthse==" "&&year!=" "){
            //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            if (st.searchstudentfeesyear(year)){   st.StudentFeesConditionyear(jTable1, year);
                return;}else {

                JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }
        if (idserch.getText()!=""&&namesearch.getText()!=""&&monthse==" "&&year.equals(" ")){
            //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
            if (st.searchstudentfeesidname(idserch.getText(), namesearch.getText())){    st.StudentFeesConditionidName(jTable1, idserch.getText(),namesearch.getText());
                return;
            }
            else {

                JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                return;
            }}

            if (idserch.getText()!=""&&namesearch.getText()==""&&monthse!=" "&&year.equals(" ")){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesidmonth(idserch.getText(), String.valueOf(m))){  st.StudentFeesConditionidMonth(jTable1, idserch.getText(),String.valueOf(m));
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText()!=""&&namesearch.getText()==""&&monthse==" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesidyear(idserch.getText(), year)){ st.StudentFeesConditionidYear(jTable1, idserch.getText(),year);
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText().equals("")&&namesearch.getText()!=""&&monthse!=" "&&year.equals(" ")){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesnamemonth(namesearch.getText(), String.valueOf(m))){  st.StudentFeesConditionNameMonth(jTable1, namesearch.getText(),String.valueOf(m));
                    return;}
                else{

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText().equals("")&&namesearch.getText()!=""&&monthse==" "&&year !=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesnameyear(namesearch.getText(), year)){
                    st.StudentFeesConditionNameYear(jTable1, namesearch.getText(),year);
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText().equals("")&&namesearch.getText().equals("")&&monthse!=" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if(st.searchstudentfeesmonthyear(String.valueOf(m), year)){
                    st.StudentFeesConditionMonthYear(jTable1, String.valueOf(m), year);
                    //JOptionPane.showMessageDialog(null, "found");//Year(jTable1, namesearch.getText(),year);
                    return;}else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText()!=""&&namesearch.getText()!=""&&monthse!=" "&&year.equals("")){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesidnameyear(idserch.getText(), namesearch.getText(), year)){
                    st.StudentFeesConditionidNameMonth(jTable1, idserch.getText(),namesearch.getText(),String.valueOf(m));
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText()!=""&&namesearch.getText()!=""&&monthse==" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesidmonthyear(idserch.getText(), String.valueOf(m), year)){
                    st.StudentFeesConditionIdMonthYear(jTable1, idserch.getText(),String.valueOf(m),year);
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText().equals("")&&namesearch.getText()!=""&&monthse!=" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchstudentfeesnamemonthyear(namesearch.getText(), String.valueOf(m), year)){    st.StudentFeesConditionNameMonthYear(jTable1, namesearch.getText(),String.valueOf(m),year);
                    return;}
                else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }

            if (idserch.getText()!=""&&namesearch.getText()!=""&&monthse!=" "&&year!=" "){
                //              JOptionPane.showMessageDialog( this, "PLEASE ENTER All ","Error", JOptionPane.ERROR_MESSAGE);
                if (st.searchpayrollAll(idserch.getText(), namesearch.getText(), String.valueOf(m), year)){
                    st.payrollAll(jTable1, idserch.getText(), namesearch.getText(), String.valueOf(m), year);

                    return;}else {

                    JOptionPane.showMessageDialog(null, "NOT FOUND","STUDENT",JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        childPanel=new staffFinance();
        childPanel.setSize(this.getSize());
        this.removeAll();
        this.repaint();
        this.add(childPanel);
        this.validate();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void yearsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearsearchActionPerformed

    private void monthseaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthseaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthseaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ADjLABEL3;
    private javax.swing.JLabel BASICSALARYjLABEL;
    private javax.swing.JLabel GROSSjLABEL2;
    private javax.swing.JLabel INCjLABEL3;
    private javax.swing.JLabel INEDjLABEL1;
    private javax.swing.JLabel INjLABEL1;
    private javax.swing.JLabel NTjLABEL4;
    private javax.swing.JLabel RDjLABEL2;
    private javax.swing.JLabel RTjLABEL5;
    private javax.swing.JPanel addbtn4;
    private javax.swing.JTextField idserch;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> monthsea;
    private javax.swing.JTextField namesearch;
    private javax.swing.JComboBox<String> yearsearch;
    // End of variables declaration//GEN-END:variables
}
